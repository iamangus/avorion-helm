apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "avorion.fullname" . }}
  labels:
    app: {{ template "avorion.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "avorion.fullname" . }}
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: {{ template "avorion.fullname" . }}
        release: "{{ .Release.Name }}"
    spec:
      initContainers:
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chown -R steam:steam /data/demo"]
        volumeMounts:
        - name: server-ini
          mountPath: /data/demo
      containers:
      - name: {{ template "avorion.fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: Always
        resources:
{{ toYaml .Values.resources | indent 10 }}

        ports:
        - name: avorion-tcp-1
          containerPort: 27000
          protocol: TCP
        - name: avorion-udp-1
          containerPort: 27000
          protocol: UDP
        - name: avorion-udp-2
          containerPort: 27003
          protocol: UDP
        volumeMounts:
        - name: config
          mountPath: /home/steam/.avorion/galaxies/avorion_galaxy
        - name: server-ini
          mountPath: /home/steam/.avorion/galaxies/avorion_galaxy/temp-server.ini
          subPath: temp-server.ini
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: server-ini
        configMap:
          name: {{ template "avorion.fullname" . }}-configmap
      - name: config
        persistentVolumeClaim:
{{- if eq .Values.persistence.claimName "" }}
          claimName: {{ template "avorion.fullname" . }}-config
{{- else }}
          claimName: {{ .Values.persistence.claimName }}
{{- end }}
